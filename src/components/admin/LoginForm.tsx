import { Button } from "@/components/ui/button";

interface LoginFormProps {
  password: string;
  setPassword: (value: string) => void;
  loginError: string;
  onLogin: () => void;
  isBlocked?: boolean;
  blockTime?: number;
}

const LoginForm = ({ 
  password, 
  setPassword, 
  loginError, 
  onLogin, 
  isBlocked = false, 
  blockTime = 0 
}: LoginFormProps) => {
  
  const formatTime = (ms: number) => {
    const minutes = Math.ceil(ms / 1000 / 60);
    return `${minutes} –º–∏–Ω—É—Ç`;
  };

  return (
    <div className="space-y-4">
      <div>
        <label className="block text-sm font-medium text-slate-700 mb-2">–ü–∞—Ä–æ–ª—å</label>
        <input
          type="password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          onKeyPress={(e) => e.key === "Enter" && !isBlocked && onLogin()}
          placeholder={isBlocked ? "–°–∏—Å—Ç–µ–º–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞" : "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"}
          disabled={isBlocked}
          className={`w-full px-4 py-2 border rounded focus:outline-none ${
            isBlocked 
              ? "bg-slate-100 border-slate-300 text-slate-500 cursor-not-allowed" 
              : "border-slate-300 focus:border-mint"
          }`}
        />
        {loginError && (
          <p className={`text-sm mt-2 ${
            loginError.includes("–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞") ? "text-orange-600" : "text-red-600"
          }`}>
            {loginError}
          </p>
        )}
      </div>
      
      <Button 
        onClick={onLogin} 
        disabled={isBlocked}
        className={`w-full ${
          isBlocked ? "bg-slate-400 cursor-not-allowed" : ""
        }`}
      >
        {isBlocked ? "–°–∏—Å—Ç–µ–º–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞" : "–í–æ–π—Ç–∏"}
      </Button>
      
      <div className="text-xs text-slate-500 text-center mt-4 space-y-1">
        {isBlocked ? (
          <p className="text-orange-600">
            ‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —á–µ—Ä–µ–∑ {formatTime(blockTime)}
          </p>
        ) : (
          <p>–ó–∞—â–∏—Ç–∞: 5 –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞, –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–∞ 30 –º–∏–Ω—É—Ç</p>
        )}
        <p>üîí –°—Ç–∞—Ç–∏—á–Ω—ã–π –ø–∞—Ä–æ–ª—å, —Å–º–µ–Ω–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞</p>
      </div>
    </div>
  );
};

export default LoginForm;
